From 32dd4abaae640e5774bfda53cc0f7b48ffb95e2a Mon Sep 17 00:00:00 2001
From: Matthias Klumpp <matthias@tenstral.net>
Date: Thu, 9 Jan 2020 21:55:47 +0100
Subject: [PATCH] aptcc: Set locale env vars properly according to frontend
 request

Previously the locale settings were not applied to some subprocesses
spawned by APT or dpkg. This patch changes that and also simplifies &
deduplicates the locale handling a bit.
---
 backends/aptcc/apt-intf.cpp | 56 +++++++++++++++++++------------------
 backends/aptcc/apt-intf.h   |  1 +
 2 files changed, 30 insertions(+), 27 deletions(-)

diff --git a/backends/aptcc/apt-intf.cpp b/backends/aptcc/apt-intf.cpp
index 1f589d065..946a19555 100644
--- a/backends/aptcc/apt-intf.cpp
+++ b/backends/aptcc/apt-intf.cpp
@@ -71,32 +71,23 @@ AptIntf::AptIntf(PkBackendJob *job) :
 
 bool AptIntf::init(gchar **localDebs)
 {
-    const gchar *locale;
     const gchar *http_proxy;
     const gchar *ftp_proxy;
 
     m_isMultiArch = APT::Configuration::getArchitectures(false).size() > 1;
 
     // set locale
-    if (locale = pk_backend_job_get_locale(m_job)) {
-        setlocale(LC_ALL, locale);
-        // TODO why this cuts characters on ui?
-        // 		string _locale(locale);
-        // 		size_t found;
-        // 		found = _locale.find('.');
-        // 		_locale.erase(found);
-        // 		_config->Set("APT::Acquire::Translation", _locale);
-    }
+    setEnvLocaleFromJob();
 
     // set http proxy
     http_proxy = pk_backend_job_get_proxy_http(m_job);
     if (http_proxy != NULL)
-        setenv("http_proxy", http_proxy, 1);
+        g_setenv("http_proxy", http_proxy, TRUE);
 
     // set ftp proxy
     ftp_proxy = pk_backend_job_get_proxy_ftp(m_job);
     if (ftp_proxy != NULL)
-        setenv("ftp_proxy", ftp_proxy, 1);
+        g_setenv("ftp_proxy", ftp_proxy, TRUE);
 
     // Check if we should open the Cache with lock
     bool withLock;
@@ -157,8 +148,8 @@ bool AptIntf::init(gchar **localDebs)
         _config->Set("Dpkg::Options::", "--force-confdef");
         _config->Set("Dpkg::Options::", "--force-confold");
         // Ensure nothing interferes with questions
-        setenv("APT_LISTCHANGES_FRONTEND", "none", 1);
-        setenv("APT_LISTBUGS_FRONTEND", "none", 1);
+        g_setenv("APT_LISTCHANGES_FRONTEND", "none", TRUE);
+        g_setenv("APT_LISTBUGS_FRONTEND", "none", TRUE);
     }
 
     // Check if there are half-installed packages and if we can fix them
@@ -170,6 +161,20 @@ AptIntf::~AptIntf()
     delete m_cache;
 }
 
+void AptIntf::setEnvLocaleFromJob()
+{
+    const gchar *locale = pk_backend_job_get_locale(m_job);
+    if (locale == NULL)
+        return;
+
+    // set daemon locale
+    setlocale(LC_ALL, locale);
+
+    // processes spawned by APT need to inherit the right locale as well
+    g_setenv("LANG", locale, TRUE);
+    g_setenv("LANGUAGE", locale, TRUE);
+}
+
 void AptIntf::cancel()
 {
     if (!m_cancel) {
@@ -1412,7 +1417,7 @@ void AptIntf::providesMimeType(PkgList &output, gchar **values)
             pk_backend_job_error_code(m_job,
                                       PK_ERROR_ENUM_INTERNAL_ERROR,
                                       "No AppStream metadata was found. This means we are unable to find any information for your request.");
-	}
+        }
     }
 }
 
@@ -2460,7 +2465,7 @@ bool AptIntf::installPackages(PkBitfield flags)
     pk_backend_job_set_percentage(m_job, PK_BACKEND_PERCENTAGE_INVALID);
 
     // we could try to see if this is the case
-    setenv("PATH", "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin", 1);
+    g_setenv("PATH", "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin", TRUE);
     _system->UnLockInner();
 
     pkgPackageManager::OrderResult res;
@@ -2491,32 +2496,29 @@ bool AptIntf::installPackages(PkBitfield flags)
         close(readFromChildFD[0]);
 
         // Change the locale to not get libapt localization
-        setlocale(LC_ALL, "C");
+        setlocale(LC_ALL, "C.UTF-8");
+        g_setenv("LANG", "C.UTF-8", TRUE);
+        g_setenv("LANGUAGE", "C.UTF-8", TRUE);
 
         // Debconf handling
         const gchar *socket = pk_backend_job_get_frontend_socket(m_job);
         if ((m_interactive) && (socket != NULL)) {
-            setenv("DEBIAN_FRONTEND", "passthrough", 1);
-            setenv("DEBCONF_PIPE", socket, 1);
+            g_setenv("DEBIAN_FRONTEND", "passthrough", TRUE);
+            g_setenv("DEBCONF_PIPE", socket, TRUE);
         } else {
             // we don't have a socket set or are not interactive, let's fallback to noninteractive
-            setenv("DEBIAN_FRONTEND", "noninteractive", 1);
+            g_setenv("DEBIAN_FRONTEND", "noninteractive", TRUE);
         }
 
-        const gchar *locale;
         // Set the LANGUAGE so debconf messages get localization
-        if (locale = pk_backend_job_get_locale(m_job)) {
-            setenv("LANGUAGE", locale, 1);
-            setenv("LANG", locale, 1);
-            //setenv("LANG", "C", 1);
-        }
+        setEnvLocaleFromJob();
 
         // apt will record this in its history.log
         guint uid = pk_backend_job_get_uid(m_job);
         if (uid > 0) {
             gchar buf[16];
             snprintf(buf, sizeof(buf), "%d", uid);
-            setenv("PACKAGEKIT_CALLER_UID", buf, 1);
+            g_setenv("PACKAGEKIT_CALLER_UID", buf, TRUE);
         }
 
         PkRoleEnum role = pk_backend_job_get_role(m_job);
diff --git a/backends/aptcc/apt-intf.h b/backends/aptcc/apt-intf.h
index fb12e3b8a..791ab5983 100644
--- a/backends/aptcc/apt-intf.h
+++ b/backends/aptcc/apt-intf.h
@@ -242,6 +242,7 @@ class AptIntf
     AptCacheFile* aptCacheFile() const;
 
 private:
+    void setEnvLocaleFromJob();
     bool checkTrusted(pkgAcquire &fetcher, PkBitfield flags);
     bool packageIsSupported(const pkgCache::VerIterator &verIter, string component);
     bool isApplication(const pkgCache::VerIterator &verIter);
